/*
 * Copyright (c) 2020 Pete Johanson, TJ Campie
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    model = "Nezumi";
    compatible = "nezumi";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan;
        zephyr,console = &cdc_acm_uart;
        zmk,battery = &vbatt;
        zmk,matrix_transform = &default_transform;
    };
    
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <1>;

        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)
        >;
    };
    
    kscan: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN";
        rows = <1>;
        columns = <5>;

        left {
            kscan = <&kscan_left>;
        };

        right {
            kscan = <&kscan_right>;
            column-offset = <3>;
        };
    };

    kscan_left: kscan_left {
        compatible="zmk,kscan-gpio-direct"
        label = "KSCAN_LEFT";

        debounce-press-ms = 0;
        debounce-release-ms = 0;

        input-gpios
        = <&gpio0 4 (GPIO_ACTIVE_HIGH)>
        , <&gpio0 5 (GPIO_ACTIVE_HIGH)>
        ;
    };

    kscan_right: kscan_right {
        compatible="zmk,kscan-gpio-direct"
        label = "KSCAN_RIGHT";

        input-gpios
        = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&gpio1 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        ;
    };

    encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        a-gpios = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <2>;
        status = "okay";
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "BATTERY";
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    status = "okay";
    sda-pin = <(32 + 9)>;
    scl-pin = <5>;

    fuel_gauge: max17055@36 {
        compatible = "maxim,max17055";
        label = "max17055";
        reg = <0x36>;

        design-capacity = <1200>;
        design-voltage = <3700>;
        desired-voltage = <4200>;
        desired-charging-current = <500>;
        i-chg-term = <30>;
        rsense-mohms = <5>;
        v-empty = <3000>;
    };
};

&usbd {
    status = "okay";

    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
        label = "CDC_ACM_0";
    };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "softdevice";
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            label = "code_partition";
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            label = "storage";
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};